{
  // usa il venv locale
  "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",

  // Disattiva il type checker integrato (usiamo mypy)
  "python.analysis.typeCheckingMode": "off",

  // Ruff: lint + quick-fix in salvataggio
  "ruff.enable": true,
  "ruff.configuration": "${workspaceFolder}/pyproject.toml",
  "editor.codeActionsOnSave": {
    "source.fixAll.ruff": "explicit"
  },

  // Black come formatter per Python
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true
  },
  "black-formatter.args": ["--line-length", "100"],

  // usa mypy dal venv, non quello bundled
  "mypy-type-checker.importStrategy": "fromEnvironment",
  "mypy-type-checker.interpreter": ["${workspaceFolder}/.venv/bin/python"],
  // forza proprio l'eseguibile mypy del venv (questo vince su importStrategy)
  "mypy-type-checker.path": ["${workspaceFolder}/.venv/bin/mypy"],
  "mypy-type-checker.args": [
    "--config-file=${workspaceFolder}/pyproject.toml",
    "--strict"
  ],
  "mypy-type-checker.cwd": "${workspaceFolder}",
  "mypy-type-checker.preferDaemon": false,   // evita che resti “appeso” con l'interprete sbagliato

  // Test (se usi pytest)
  "python.testing.pytestEnabled": true,
  "python.testing.pytestArgs": ["-q"]
}
